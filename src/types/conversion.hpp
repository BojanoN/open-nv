#pragma once
#include "types/errorpair.hpp"
#include <cstring>
#include <cstdint>
#include <cmath>

namespace Types {


const uint64_t decdigits[400] = 
{
	0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,0ull,
	1ull,10ull,100ull,1000ull,10000ull,100000ull,1000000ull,10000000ull,100000000ull,1000000000ull,10000000000ull,100000000000ull,1000000000000ull,10000000000000ull,100000000000000ull,1000000000000000ull, 10000000000000000ull,100000000000000000ull,1000000000000000000ull,10000000000000000000ull,
	2ull,20ull,200ull,2000ull,20000ull,200000ull,2000000ull,20000000ull,200000000ull,2000000000ull,20000000000ull,200000000000ull,2000000000000ull,20000000000000ull,200000000000000ull,2000000000000000ull,20000000000000000ull,200000000000000000ull,2000000000000000000ull,0ull,
	3ull,30ull,300ull,3000ull,30000ull,300000ull,3000000ull,30000000ull,300000000ull,3000000000ull,30000000000ull,300000000000ull,3000000000000ull,30000000000000ull,300000000000000ull,3000000000000000ull,30000000000000000ull,300000000000000000ull,3000000000000000000ull,0ull,
	4ull,40ull,400ull,4000ull,40000ull,400000ull,4000000ull,40000000ull,400000000ull,4000000000ull,40000000000ull,400000000000ull,4000000000000ull,40000000000000ull,400000000000000ull,4000000000000000ull,40000000000000000ull,400000000000000000ull,4000000000000000000ull,0ull,
	5ull,50ull,500ull,5000ull,50000ull,500000ull,5000000ull,50000000ull,500000000ull,5000000000ull,50000000000ull,500000000000ull,5000000000000ull,50000000000000ull,500000000000000ull,5000000000000000ull,50000000000000000ull,500000000000000000ull,5000000000000000000ull,0ull,
	6ull,60ull,600ull,6000ull,60000ull,600000ull,6000000ull,60000000ull,600000000ull,6000000000ull,60000000000ull,600000000000ull,6000000000000ull,60000000000000ull,600000000000000ull,6000000000000000ull,60000000000000000ull,600000000000000000ull,6000000000000000000ull,0ull,
	7ull,70ull,700ull,7000ull,70000ull,700000ull,7000000ull,70000000ull,700000000ull,7000000000ull,70000000000ull,700000000000ull,7000000000000ull,70000000000000ull,700000000000000ull,7000000000000000ull,70000000000000000ull,700000000000000000ull,7000000000000000000ull,0ull,
	8ull,80ull,800ull,8000ull,80000ull,800000ull,8000000ull,80000000ull,800000000ull,8000000000ull,80000000000ull,800000000000ull,8000000000000ull,80000000000000ull,800000000000000ull,8000000000000000ull,80000000000000000ull,800000000000000000ull,8000000000000000000ull,0ull,
	9ull,90ull,900ull,9000ull,90000ull,900000ull,9000000ull,90000000ull,900000000ull,9000000000ull,90000000000ull,900000000000ull,9000000000000ull,90000000000000ull,900000000000000ull,9000000000000000ull,90000000000000000ull,900000000000000000ull,9000000000000000000ull,0ull,
};

const uint32_t rowSize = 20;
const uint32_t maximumUnsignedDigits = 20;
const uint32_t maximumSignedDigits = 19;
const uint32_t floatSignificantDigits = 7;


ErrorPair<uint64_t> parseUInt(const char* stringValue);
ErrorPair<int64_t> parseInt(const char* stringValue);
ErrorPair<float> parseFloat(const char* stringValue);

}; // namespace Types