
        #pragma once
        #include <cstdint>
        namespace NiEnums {
enum ApplyMode : uint32_t {
	APPLY_REPLACE = 0,
	APPLY_DECAL = 1,
	APPLY_MODULATE = 2,
	APPLY_HILIGHT = 3,
	APPLY_HILIGHT2 = 4
};
enum TexType : uint32_t {
	BASE_MAP = 0,
	DARK_MAP = 1,
	DETAIL_MAP = 2,
	GLOSS_MAP = 3,
	GLOW_MAP = 4,
	BUMP_MAP = 5,
	NORMAL_MAP = 6,
	PARALLAX_MAP = 7,
	DECAL_0_MAP = 8,
	DECAL_1_MAP = 9,
	DECAL_2_MAP = 10,
	DECAL_3_MAP = 11
};
enum KeyType : uint32_t {
	LINEAR_KEY = 1,
	QUADRATIC_KEY = 2,
	TBC_KEY = 3,
	XYZ_ROTATION_KEY = 4,
	CONST_KEY = 5
};
enum OblivionHavokMaterial : uint32_t {
	OB_HAV_MAT_STONE = 0,
	OB_HAV_MAT_CLOTH = 1,
	OB_HAV_MAT_DIRT = 2,
	OB_HAV_MAT_GLASS = 3,
	OB_HAV_MAT_GRASS = 4,
	OB_HAV_MAT_METAL = 5,
	OB_HAV_MAT_ORGANIC = 6,
	OB_HAV_MAT_SKIN = 7,
	OB_HAV_MAT_WATER = 8,
	OB_HAV_MAT_WOOD = 9,
	OB_HAV_MAT_HEAVY_STONE = 10,
	OB_HAV_MAT_HEAVY_METAL = 11,
	OB_HAV_MAT_HEAVY_WOOD = 12,
	OB_HAV_MAT_CHAIN = 13,
	OB_HAV_MAT_SNOW = 14,
	OB_HAV_MAT_STONE_STAIRS = 15,
	OB_HAV_MAT_CLOTH_STAIRS = 16,
	OB_HAV_MAT_DIRT_STAIRS = 17,
	OB_HAV_MAT_GLASS_STAIRS = 18,
	OB_HAV_MAT_GRASS_STAIRS = 19,
	OB_HAV_MAT_METAL_STAIRS = 20,
	OB_HAV_MAT_ORGANIC_STAIRS = 21,
	OB_HAV_MAT_SKIN_STAIRS = 22,
	OB_HAV_MAT_WATER_STAIRS = 23,
	OB_HAV_MAT_WOOD_STAIRS = 24,
	OB_HAV_MAT_HEAVY_STONE_STAIRS = 25,
	OB_HAV_MAT_HEAVY_METAL_STAIRS = 26,
	OB_HAV_MAT_HEAVY_WOOD_STAIRS = 27,
	OB_HAV_MAT_CHAIN_STAIRS = 28,
	OB_HAV_MAT_SNOW_STAIRS = 29,
	OB_HAV_MAT_ELEVATOR = 30,
	OB_HAV_MAT_RUBBER = 31
};
enum Fallout3HavokMaterial : uint32_t {
	FO_HAV_MAT_STONE = 0,
	FO_HAV_MAT_CLOTH = 1,
	FO_HAV_MAT_DIRT = 2,
	FO_HAV_MAT_GLASS = 3,
	FO_HAV_MAT_GRASS = 4,
	FO_HAV_MAT_METAL = 5,
	FO_HAV_MAT_ORGANIC = 6,
	FO_HAV_MAT_SKIN = 7,
	FO_HAV_MAT_WATER = 8,
	FO_HAV_MAT_WOOD = 9,
	FO_HAV_MAT_HEAVY_STONE = 10,
	FO_HAV_MAT_HEAVY_METAL = 11,
	FO_HAV_MAT_HEAVY_WOOD = 12,
	FO_HAV_MAT_CHAIN = 13,
	FO_HAV_MAT_BOTTLECAP = 14,
	FO_HAV_MAT_ELEVATOR = 15,
	FO_HAV_MAT_HOLLOW_METAL = 16,
	FO_HAV_MAT_SHEET_METAL = 17,
	FO_HAV_MAT_SAND = 18,
	FO_HAV_MAT_BROKEN_CONCRETE = 19,
	FO_HAV_MAT_VEHICLE_BODY = 20,
	FO_HAV_MAT_VEHICLE_PART_SOLID = 21,
	FO_HAV_MAT_VEHICLE_PART_HOLLOW = 22,
	FO_HAV_MAT_BARREL = 23,
	FO_HAV_MAT_BOTTLE = 24,
	FO_HAV_MAT_SODA_CAN = 25,
	FO_HAV_MAT_PISTOL = 26,
	FO_HAV_MAT_RIFLE = 27,
	FO_HAV_MAT_SHOPPING_CART = 28,
	FO_HAV_MAT_LUNCHBOX = 29,
	FO_HAV_MAT_BABY_RATTLE = 30,
	FO_HAV_MAT_RUBBER_BALL = 31,
	FO_HAV_MAT_STONE_PLATFORM = 32,
	FO_HAV_MAT_CLOTH_PLATFORM = 33,
	FO_HAV_MAT_DIRT_PLATFORM = 34,
	FO_HAV_MAT_GLASS_PLATFORM = 35,
	FO_HAV_MAT_GRASS_PLATFORM = 36,
	FO_HAV_MAT_METAL_PLATFORM = 37,
	FO_HAV_MAT_ORGANIC_PLATFORM = 38,
	FO_HAV_MAT_SKIN_PLATFORM = 39,
	FO_HAV_MAT_WATER_PLATFORM = 40,
	FO_HAV_MAT_WOOD_PLATFORM = 41,
	FO_HAV_MAT_HEAVY_STONE_PLATFORM = 42,
	FO_HAV_MAT_HEAVY_METAL_PLATFORM = 43,
	FO_HAV_MAT_HEAVY_WOOD_PLATFORM = 44,
	FO_HAV_MAT_CHAIN_PLATFORM = 45,
	FO_HAV_MAT_BOTTLECAP_PLATFORM = 46,
	FO_HAV_MAT_ELEVATOR_PLATFORM = 47,
	FO_HAV_MAT_HOLLOW_METAL_PLATFORM = 48,
	FO_HAV_MAT_SHEET_METAL_PLATFORM = 49,
	FO_HAV_MAT_SAND_PLATFORM = 50,
	FO_HAV_MAT_BROKEN_CONCRETE_PLATFORM = 51,
	FO_HAV_MAT_VEHICLE_BODY_PLATFORM = 52,
	FO_HAV_MAT_VEHICLE_PART_SOLID_PLATFORM = 53,
	FO_HAV_MAT_VEHICLE_PART_HOLLOW_PLATFORM = 54,
	FO_HAV_MAT_BARREL_PLATFORM = 55,
	FO_HAV_MAT_BOTTLE_PLATFORM = 56,
	FO_HAV_MAT_SODA_CAN_PLATFORM = 57,
	FO_HAV_MAT_PISTOL_PLATFORM = 58,
	FO_HAV_MAT_RIFLE_PLATFORM = 59,
	FO_HAV_MAT_SHOPPING_CART_PLATFORM = 60,
	FO_HAV_MAT_LUNCHBOX_PLATFORM = 61,
	FO_HAV_MAT_BABY_RATTLE_PLATFORM = 62,
	FO_HAV_MAT_RUBBER_BALL_PLATFORM = 63,
	FO_HAV_MAT_STONE_STAIRS = 64,
	FO_HAV_MAT_CLOTH_STAIRS = 65,
	FO_HAV_MAT_DIRT_STAIRS = 66,
	FO_HAV_MAT_GLASS_STAIRS = 67,
	FO_HAV_MAT_GRASS_STAIRS = 68,
	FO_HAV_MAT_METAL_STAIRS = 69,
	FO_HAV_MAT_ORGANIC_STAIRS = 70,
	FO_HAV_MAT_SKIN_STAIRS = 71,
	FO_HAV_MAT_WATER_STAIRS = 72,
	FO_HAV_MAT_WOOD_STAIRS = 73,
	FO_HAV_MAT_HEAVY_STONE_STAIRS = 74,
	FO_HAV_MAT_HEAVY_METAL_STAIRS = 75,
	FO_HAV_MAT_HEAVY_WOOD_STAIRS = 76,
	FO_HAV_MAT_CHAIN_STAIRS = 77,
	FO_HAV_MAT_BOTTLECAP_STAIRS = 78,
	FO_HAV_MAT_ELEVATOR_STAIRS = 79,
	FO_HAV_MAT_HOLLOW_METAL_STAIRS = 80,
	FO_HAV_MAT_SHEET_METAL_STAIRS = 81,
	FO_HAV_MAT_SAND_STAIRS = 82,
	FO_HAV_MAT_BROKEN_CONCRETE_STAIRS = 83,
	FO_HAV_MAT_VEHICLE_BODY_STAIRS = 84,
	FO_HAV_MAT_VEHICLE_PART_SOLID_STAIRS = 85,
	FO_HAV_MAT_VEHICLE_PART_HOLLOW_STAIRS = 86,
	FO_HAV_MAT_BARREL_STAIRS = 87,
	FO_HAV_MAT_BOTTLE_STAIRS = 88,
	FO_HAV_MAT_SODA_CAN_STAIRS = 89,
	FO_HAV_MAT_PISTOL_STAIRS = 90,
	FO_HAV_MAT_RIFLE_STAIRS = 91,
	FO_HAV_MAT_SHOPPING_CART_STAIRS = 92,
	FO_HAV_MAT_LUNCHBOX_STAIRS = 93,
	FO_HAV_MAT_BABY_RATTLE_STAIRS = 94,
	FO_HAV_MAT_RUBBER_BALL_STAIRS = 95,
	FO_HAV_MAT_STONE_STAIRS_PLATFORM = 96,
	FO_HAV_MAT_CLOTH_STAIRS_PLATFORM = 97,
	FO_HAV_MAT_DIRT_STAIRS_PLATFORM = 98,
	FO_HAV_MAT_GLASS_STAIRS_PLATFORM = 99,
	FO_HAV_MAT_GRASS_STAIRS_PLATFORM = 100,
	FO_HAV_MAT_METAL_STAIRS_PLATFORM = 101,
	FO_HAV_MAT_ORGANIC_STAIRS_PLATFORM = 102,
	FO_HAV_MAT_SKIN_STAIRS_PLATFORM = 103,
	FO_HAV_MAT_WATER_STAIRS_PLATFORM = 104,
	FO_HAV_MAT_WOOD_STAIRS_PLATFORM = 105,
	FO_HAV_MAT_HEAVY_STONE_STAIRS_PLATFORM = 106,
	FO_HAV_MAT_HEAVY_METAL_STAIRS_PLATFORM = 107,
	FO_HAV_MAT_HEAVY_WOOD_STAIRS_PLATFORM = 108,
	FO_HAV_MAT_CHAIN_STAIRS_PLATFORM = 109,
	FO_HAV_MAT_BOTTLECAP_STAIRS_PLATFORM = 110,
	FO_HAV_MAT_ELEVATOR_STAIRS_PLATFORM = 111,
	FO_HAV_MAT_HOLLOW_METAL_STAIRS_PLATFORM = 112,
	FO_HAV_MAT_SHEET_METAL_STAIRS_PLATFORM = 113,
	FO_HAV_MAT_SAND_STAIRS_PLATFORM = 114,
	FO_HAV_MAT_BROKEN_CONCRETE_STAIRS_PLATFORM = 115,
	FO_HAV_MAT_VEHICLE_BODY_STAIRS_PLATFORM = 116,
	FO_HAV_MAT_VEHICLE_PART_SOLID_STAIRS_PLATFORM = 117,
	FO_HAV_MAT_VEHICLE_PART_HOLLOW_STAIRS_PLATFORM = 118,
	FO_HAV_MAT_BARREL_STAIRS_PLATFORM = 119,
	FO_HAV_MAT_BOTTLE_STAIRS_PLATFORM = 120,
	FO_HAV_MAT_SODA_CAN_STAIRS_PLATFORM = 121,
	FO_HAV_MAT_PISTOL_STAIRS_PLATFORM = 122,
	FO_HAV_MAT_RIFLE_STAIRS_PLATFORM = 123,
	FO_HAV_MAT_SHOPPING_CART_STAIRS_PLATFORM = 124,
	FO_HAV_MAT_LUNCHBOX_STAIRS_PLATFORM = 125,
	FO_HAV_MAT_BABY_RATTLE_STAIRS_PLATFORM = 126,
	FO_HAV_MAT_RUBBER_BALL_STAIRS_PLATFORM = 127
};
enum OblivionLayer : uint8_t {
	OL_UNIDENTIFIED = 0,
	OL_STATIC = 1,
	OL_ANIM_STATIC = 2,
	OL_TRANSPARENT = 3,
	OL_CLUTTER = 4,
	OL_WEAPON = 5,
	OL_PROJECTILE = 6,
	OL_SPELL = 7,
	OL_BIPED = 8,
	OL_TREES = 9,
	OL_PROPS = 10,
	OL_WATER = 11,
	OL_TRIGGER = 12,
	OL_TERRAIN = 13,
	OL_TRAP = 14,
	OL_NONCOLLIDABLE = 15,
	OL_CLOUD_TRAP = 16,
	OL_GROUND = 17,
	OL_PORTAL = 18,
	OL_STAIRS = 19,
	OL_CHAR_CONTROLLER = 20,
	OL_AVOID_BOX = 21,
	OL_UNKNOWN1 = 22,
	OL_UNKNOWN2 = 23,
	OL_CAMERA_PICK = 24,
	OL_ITEM_PICK = 25,
	OL_LINE_OF_SIGHT = 26,
	OL_PATH_PICK = 27,
	OL_CUSTOM_PICK_1 = 28,
	OL_CUSTOM_PICK_2 = 29,
	OL_SPELL_EXPLOSION = 30,
	OL_DROPPING_PICK = 31,
	OL_OTHER = 32,
	OL_HEAD = 33,
	OL_BODY = 34,
	OL_SPINE1 = 35,
	OL_SPINE2 = 36,
	OL_L_UPPER_ARM = 37,
	OL_L_FOREARM = 38,
	OL_L_HAND = 39,
	OL_L_THIGH = 40,
	OL_L_CALF = 41,
	OL_L_FOOT = 42,
	OL_R_UPPER_ARM = 43,
	OL_R_FOREARM = 44,
	OL_R_HAND = 45,
	OL_R_THIGH = 46,
	OL_R_CALF = 47,
	OL_R_FOOT = 48,
	OL_TAIL = 49,
	OL_SIDE_WEAPON = 50,
	OL_SHIELD = 51,
	OL_QUIVER = 52,
	OL_BACK_WEAPON = 53,
	OL_BACK_WEAPON2 = 54,
	OL_PONYTAIL = 55,
	OL_WING = 56,
	OL_NULL = 57
};
enum Fallout3Layer : uint8_t {
	FOL_UNIDENTIFIED = 0,
	FOL_STATIC = 1,
	FOL_ANIM_STATIC = 2,
	FOL_TRANSPARENT = 3,
	FOL_CLUTTER = 4,
	FOL_WEAPON = 5,
	FOL_PROJECTILE = 6,
	FOL_SPELL = 7,
	FOL_BIPED = 8,
	FOL_TREES = 9,
	FOL_PROPS = 10,
	FOL_WATER = 11,
	FOL_TRIGGER = 12,
	FOL_TERRAIN = 13,
	FOL_TRAP = 14,
	FOL_NONCOLLIDABLE = 15,
	FOL_CLOUD_TRAP = 16,
	FOL_GROUND = 17,
	FOL_PORTAL = 18,
	FOL_DEBRIS_SMALL = 19,
	FOL_DEBRIS_LARGE = 20,
	FOL_ACOUSTIC_SPACE = 21,
	FOL_ACTORZONE = 22,
	FOL_PROJECTILEZONE = 23,
	FOL_GASTRAP = 24,
	FOL_SHELLCASING = 25,
	FOL_TRANSPARENT_SMALL = 26,
	FOL_INVISIBLE_WALL = 27,
	FOL_TRANSPARENT_SMALL_ANIM = 28,
	FOL_DEADBIP = 29,
	FOL_CHARCONTROLLER = 30,
	FOL_AVOIDBOX = 31,
	FOL_COLLISIONBOX = 32,
	FOL_CAMERASPHERE = 33,
	FOL_DOORDETECTION = 34,
	FOL_CAMERAPICK = 35,
	FOL_ITEMPICK = 36,
	FOL_LINEOFSIGHT = 37,
	FOL_PATHPICK = 38,
	FOL_CUSTOMPICK1 = 39,
	FOL_CUSTOMPICK2 = 40,
	FOL_SPELLEXPLOSION = 41,
	FOL_DROPPINGPICK = 42,
	FOL_NULL = 43
};
enum BipedPart : uint8_t {
	P_OTHER = 0,
	P_HEAD = 1,
	P_BODY = 2,
	P_SPINE1 = 3,
	P_SPINE2 = 4,
	P_L_UPPER_ARM = 5,
	P_L_FOREARM = 6,
	P_L_HAND = 7,
	P_L_THIGH = 8,
	P_L_CALF = 9,
	P_L_FOOT = 10,
	P_R_UPPER_ARM = 11,
	P_R_FOREARM = 12,
	P_R_HAND = 13,
	P_R_THIGH = 14,
	P_R_CALF = 15,
	P_R_FOOT = 16,
	P_TAIL = 17,
	P_SHIELD = 18,
	P_QUIVER = 19,
	P_WEAPON = 20,
	P_PONYTAIL = 21,
	P_WING = 22,
	P_PACK = 23,
	P_CHAIN = 24,
	P_ADDON_HEAD = 25,
	P_ADDON_CHEST = 26,
	P_ADDON_LEG = 27,
	P_ADDON_ARM = 28
};
enum PlatformID : uint32_t {
	PLATFORM_ANY = 0,
	PLATFORM_XENON = 1,
	PLATFORM_PS3 = 2,
	PLATFORM_DX9 = 3,
	PLATFORM_WII = 4,
	PLATFORM_D3D10 = 5
};
enum RendererID : uint32_t {
	RENDERER_XBOX360 = 0,
	RENDERER_PS3 = 1,
	RENDERER_DX9 = 2,
	RENDERER_D3D10 = 3,
	RENDERER_WII = 4,
	RENDERER_GENERIC = 5,
	RENDERER_D3D11 = 6
};
enum PixelFormat : uint32_t {
	PX_FMT_RGB = 0,
	PX_FMT_RGBA = 1,
	PX_FMT_PAL = 2,
	PX_FMT_PALA = 3,
	PX_FMT_DXT1 = 4,
	PX_FMT_DXT3 = 5,
	PX_FMT_DXT5 = 6,
	PX_FMT_RGB24NONINT = 7,
	PX_FMT_BUMP = 8,
	PX_FMT_BUMPLUMA = 9,
	PX_FMT_RENDERSPEC = 10,
	PX_FMT_1CH = 11,
	PX_FMT_2CH = 12,
	PX_FMT_3CH = 13,
	PX_FMT_4CH = 14,
	PX_FMT_DEPTH_STENCIL = 15,
	PX_FMT_UNKNOWN = 16
};
enum PixelTiling : uint32_t {
	PX_TILE_NONE = 0,
	PX_TILE_XENON = 1,
	PX_TILE_WII = 2,
	PX_TILE_NV_SWIZZLED = 3
};
enum PixelComponent : uint32_t {
	PX_COMP_RED = 0,
	PX_COMP_GREEN = 1,
	PX_COMP_BLUE = 2,
	PX_COMP_ALPHA = 3,
	PX_COMP_COMPRESSED = 4,
	PX_COMP_OFFSET_U = 5,
	PX_COMP_OFFSET_V = 6,
	PX_COMP_OFFSET_W = 7,
	PX_COMP_OFFSET_Q = 8,
	PX_COMP_LUMA = 9,
	PX_COMP_HEIGHT = 10,
	PX_COMP_VECTOR_X = 11,
	PX_COMP_VECTOR_Y = 12,
	PX_COMP_VECTOR_Z = 13,
	PX_COMP_PADDING = 14,
	PX_COMP_INTENSITY = 15,
	PX_COMP_INDEX = 16,
	PX_COMP_DEPTH = 17,
	PX_COMP_STENCIL = 18,
	PX_COMP_EMPTY = 19
};
enum PixelRepresentation : uint32_t {
	PX_REP_NORM_INT = 0,
	PX_REP_HALF = 1,
	PX_REP_FLOAT = 2,
	PX_REP_INDEX = 3,
	PX_REP_COMPRESSED = 4,
	PX_REP_UNKNOWN = 5,
	PX_REP_INT = 6
};
enum PixelLayout : uint32_t {
	PX_LAY_PALETTIZED_8 = 0,
	PX_LAY_HIGH_COLOR_16 = 1,
	PX_LAY_TRUE_COLOR_32 = 2,
	PX_LAY_COMPRESSED = 3,
	PX_LAY_BUMPMAP = 4,
	PX_LAY_PALETTIZED_4 = 5,
	PX_LAY_DEFAULT = 6,
	PX_LAY_SINGLE_COLOR_8 = 7,
	PX_LAY_SINGLE_COLOR_16 = 8,
	PX_LAY_SINGLE_COLOR_32 = 9,
	PX_LAY_DOUBLE_COLOR_32 = 10,
	PX_LAY_DOUBLE_COLOR_64 = 11,
	PX_LAY_FLOAT_COLOR_32 = 12,
	PX_LAY_FLOAT_COLOR_64 = 13,
	PX_LAY_FLOAT_COLOR_128 = 14,
	PX_LAY_SINGLE_COLOR_4 = 15,
	PX_LAY_DEPTH_24_X8 = 16
};
enum MipMapFormat : uint32_t {
	MIP_FMT_NO = 0,
	MIP_FMT_YES = 1,
	MIP_FMT_DEFAULT = 2
};
enum AlphaFormat : uint32_t {
	ALPHA_NONE = 0,
	ALPHA_BINARY = 1,
	ALPHA_SMOOTH = 2,
	ALPHA_DEFAULT = 3
};
enum TexClampMode : uint32_t {
	CLAMP_S_CLAMP_T = 0,
	CLAMP_S_WRAP_T = 1,
	WRAP_S_CLAMP_T = 2,
	WRAP_S_WRAP_T = 3
};
enum TexFilterMode : uint32_t {
	FILTER_NEAREST = 0,
	FILTER_BILERP = 1,
	FILTER_TRILERP = 2,
	FILTER_NEAREST_MIPNEAREST = 3,
	FILTER_NEAREST_MIPLERP = 4,
	FILTER_BILERP_MIPNEAREST = 5,
	FILTER_ANISOTROPIC = 6
};
enum SourceVertexMode : uint32_t {
	VERT_MODE_SRC_IGNORE = 0,
	VERT_MODE_SRC_EMISSIVE = 1,
	VERT_MODE_SRC_AMB_DIF = 2
};
enum LightingMode : uint32_t {
	LIGHT_MODE_EMISSIVE = 0,
	LIGHT_MODE_EMI_AMB_DIF = 1
};
enum CycleType : uint32_t {
	CYCLE_LOOP = 0,
	CYCLE_REVERSE = 1,
	CYCLE_CLAMP = 2
};
enum FieldType : uint32_t {
	FIELD_WIND = 0,
	FIELD_POINT = 1
};
enum BillboardMode : uint16_t {
	ALWAYS_FACE_CAMERA = 0,
	ROTATE_ABOUT_UP = 1,
	RIGID_FACE_CAMERA = 2,
	ALWAYS_FACE_CENTER = 3,
	RIGID_FACE_CENTER = 4,
	BSROTATE_ABOUT_UP = 5,
	ROTATE_ABOUT_UP2 = 9
};
enum StencilTestFunc : uint32_t {
	STENCIL_TEST_NEVER = 0,
	STENCIL_TEST_LESS = 1,
	STENCIL_TEST_EQUAL = 2,
	STENCIL_TEST_LESS_EQUAL = 3,
	STENCIL_TEST_GREATER = 4,
	STENCIL_TEST_NOT_EQUAL = 5,
	STENCIL_TEST_GREATER_EQUAL = 6,
	STENCIL_TEST_ALWAYS = 7
};
enum StencilAction : uint32_t {
	ACTION_KEEP = 0,
	ACTION_ZERO = 1,
	ACTION_REPLACE = 2,
	ACTION_INCREMENT = 3,
	ACTION_DECREMENT = 4,
	ACTION_INVERT = 5
};
enum StencilDrawMode : uint32_t {
	DRAW_CCW_OR_BOTH = 0,
	DRAW_CCW = 1,
	DRAW_CW = 2,
	DRAW_BOTH = 3
};
enum TestFunction : uint32_t {
	TEST_ALWAYS = 0,
	TEST_LESS = 1,
	TEST_EQUAL = 2,
	TEST_LESS_EQUAL = 3,
	TEST_GREATER = 4,
	TEST_NOT_EQUAL = 5,
	TEST_GREATER_EQUAL = 6,
	TEST_NEVER = 7
};
enum AlphaFunction : uint16_t {
	ALPHA_ONE = 0,
	ALPHA__ZERO = 1,
	ALPHA_SRC_COLOR = 2,
	ALPHA_INV_SRC_COLOR = 3,
	ALPHA_DEST_COLOR = 4,
	ALPHA_INV_DEST_COLOR = 5,
	ALPHA_SRC_ALPHA = 6,
	ALPHA_INV_SRC_ALPHA = 7,
	ALPHA_DEST_ALPHA = 8,
	ALPHA_INV_DEST_ALPHA = 9,
	ALPHA_SRC_ALPHA_SATURATE = 10
};
enum hkMotionType : uint8_t {
	MO_SYS_INVALID = 0,
	MO_SYS_DYNAMIC = 1,
	MO_SYS_SPHERE_INERTIA = 2,
	MO_SYS_SPHERE_STABILIZED = 3,
	MO_SYS_BOX_INERTIA = 4,
	MO_SYS_BOX_STABILIZED = 5,
	MO_SYS_KEYFRAMED = 6,
	MO_SYS_FIXED = 7,
	MO_SYS_THIN_BOX = 8,
	MO_SYS_CHARACTER = 9
};
enum hkDeactivatorType : uint8_t {
	DEACTIVATOR_INVALID = 0,
	DEACTIVATOR_NEVER = 1,
	DEACTIVATOR_SPATIAL = 2
};
enum hkSolverDeactivation : uint8_t {
	SOLVER_DEACTIVATION_INVALID = 0,
	SOLVER_DEACTIVATION_OFF = 1,
	SOLVER_DEACTIVATION_LOW = 2,
	SOLVER_DEACTIVATION_MEDIUM = 3,
	SOLVER_DEACTIVATION_HIGH = 4,
	SOLVER_DEACTIVATION_MAX = 5
};
enum hkQualityType : uint8_t {
	MO_QUAL_INVALID = 0,
	MO_QUAL_FIXED = 1,
	MO_QUAL_KEYFRAMED = 2,
	MO_QUAL_DEBRIS = 3,
	MO_QUAL_MOVING = 4,
	MO_QUAL_CRITICAL = 5,
	MO_QUAL_BULLET = 6,
	MO_QUAL_USER = 7,
	MO_QUAL_CHARACTER = 8,
	MO_QUAL_KEYFRAMED_REPORT = 9
};
enum ForceType : uint32_t {
	FORCE_PLANAR = 0,
	FORCE_SPHERICAL = 1,
	FORCE_UNKNOWN = 2
};
enum TransformMember : uint32_t {
	TT_TRANSLATE_U = 0,
	TT_TRANSLATE_V = 1,
	TT_ROTATE = 2,
	TT_SCALE_U = 3,
	TT_SCALE_V = 4
};
enum DecayType : uint32_t {
	DECAY_NONE = 0,
	DECAY_LINEAR = 1,
	DECAY_EXPONENTIAL = 2
};
enum SymmetryType : uint32_t {
	SPHERICAL_SYMMETRY = 0,
	CYLINDRICAL_SYMMETRY = 1,
	PLANAR_SYMMETRY = 2
};
enum VelocityType : uint32_t {
	VELOCITY_USE_NORMALS = 0,
	VELOCITY_USE_RANDOM = 1,
	VELOCITY_USE_DIRECTION = 2
};
enum EmitFrom : uint32_t {
	EMIT_FROM_VERTICES = 0,
	EMIT_FROM_FACE_CENTER = 1,
	EMIT_FROM_EDGE_CENTER = 2,
	EMIT_FROM_FACE_SURFACE = 3,
	EMIT_FROM_EDGE_SURFACE = 4
};
enum TextureType : uint32_t {
	TEX_PROJECTED_LIGHT = 0,
	TEX_PROJECTED_SHADOW = 1,
	TEX_ENVIRONMENT_MAP = 2,
	TEX_FOG_MAP = 3
};
enum CoordGenType : uint32_t {
	CG_WORLD_PARALLEL = 0,
	CG_WORLD_PERSPECTIVE = 1,
	CG_SPHERE_MAP = 2,
	CG_SPECULAR_CUBE_MAP = 3,
	CG_DIFFUSE_CUBE_MAP = 4
};
enum EndianType : uint8_t {
	ENDIAN_BIG = 0,
	ENDIAN_LITTLE = 1
};
enum MaterialColor : uint16_t {
	TC_AMBIENT = 0,
	TC_DIFFUSE = 1,
	TC_SPECULAR = 2,
	TC_SELF_ILLUM = 3
};
enum LightColor : uint16_t {
	LC_DIFFUSE = 0,
	LC_AMBIENT = 1
};
enum ConsistencyType : uint16_t {
	CT_MUTABLE = 0x0000,
	CT_STATIC = 0x4000,
	CT_VOLATILE = 0x8000
};
enum SortingMode : uint32_t {
	SORTING_INHERIT = 0,
	SORTING_OFF = 1
};
enum PropagationMode : uint32_t {
	PROPAGATE_ON_SUCCESS = 0,
	PROPAGATE_ON_FAILURE = 1,
	PROPAGATE_ALWAYS = 2,
	PROPAGATE_NEVER = 3
};
enum CollisionMode : uint32_t {
	CM_USE_OBB = 0,
	CM_USE_TRI = 1,
	CM_USE_ABV = 2,
	CM_NOTEST = 3,
	CM_USE_NIBOUND = 4
};
enum BoundVolumeType : uint32_t {
	BASE_BV = 0xffffffff,
	SPHERE_BV = 0,
	BOX_BV = 1,
	CAPSULE_BV = 2,
	UNION_BV = 4,
	HALFSPACE_BV = 5
};
enum hkResponseType : uint8_t {
	RESPONSE_INVALID = 0,
	RESPONSE_SIMPLE_CONTACT = 1,
	RESPONSE_REPORTING = 2,
	RESPONSE_NONE = 3
};
enum BSDismemberBodyPartType : uint16_t {
	BP_TORSO = 0,
	BP_HEAD = 1,
	BP_HEAD2 = 2,
	BP_LEFTARM = 3,
	BP_LEFTARM2 = 4,
	BP_RIGHTARM = 5,
	BP_RIGHTARM2 = 6,
	BP_LEFTLEG = 7,
	BP_LEFTLEG2 = 8,
	BP_LEFTLEG3 = 9,
	BP_RIGHTLEG = 10,
	BP_RIGHTLEG2 = 11,
	BP_RIGHTLEG3 = 12,
	BP_BRAIN = 13,
	SBP_30_HEAD = 30,
	SBP_31_HAIR = 31,
	SBP_32_BODY = 32,
	SBP_33_HANDS = 33,
	SBP_34_FOREARMS = 34,
	SBP_35_AMULET = 35,
	SBP_36_RING = 36,
	SBP_37_FEET = 37,
	SBP_38_CALVES = 38,
	SBP_39_SHIELD = 39,
	SBP_40_TAIL = 40,
	SBP_41_LONGHAIR = 41,
	SBP_42_CIRCLET = 42,
	SBP_43_EARS = 43,
	SBP_44_DRAGON_BLOODHEAD_OR_MOD_MOUTH = 44,
	SBP_45_DRAGON_BLOODWINGL_OR_MOD_NECK = 45,
	SBP_46_DRAGON_BLOODWINGR_OR_MOD_CHEST_PRIMARY = 46,
	SBP_47_DRAGON_BLOODTAIL_OR_MOD_BACK = 47,
	SBP_48_MOD_MISC1 = 48,
	SBP_49_MOD_PELVIS_PRIMARY = 49,
	SBP_50_DECAPITATEDHEAD = 50,
	SBP_51_DECAPITATE = 51,
	SBP_52_MOD_PELVIS_SECONDARY = 52,
	SBP_53_MOD_LEG_RIGHT = 53,
	SBP_54_MOD_LEG_LEFT = 54,
	SBP_55_MOD_FACE_JEWELRY = 55,
	SBP_56_MOD_CHEST_SECONDARY = 56,
	SBP_57_MOD_SHOULDER = 57,
	SBP_58_MOD_ARM_LEFT = 58,
	SBP_59_MOD_ARM_RIGHT = 59,
	SBP_60_MOD_MISC2 = 60,
	SBP_61_FX01 = 61,
	BP_SECTIONCAP_HEAD = 101,
	BP_SECTIONCAP_HEAD2 = 102,
	BP_SECTIONCAP_LEFTARM = 103,
	BP_SECTIONCAP_LEFTARM2 = 104,
	BP_SECTIONCAP_RIGHTARM = 105,
	BP_SECTIONCAP_RIGHTARM2 = 106,
	BP_SECTIONCAP_LEFTLEG = 107,
	BP_SECTIONCAP_LEFTLEG2 = 108,
	BP_SECTIONCAP_LEFTLEG3 = 109,
	BP_SECTIONCAP_RIGHTLEG = 110,
	BP_SECTIONCAP_RIGHTLEG2 = 111,
	BP_SECTIONCAP_RIGHTLEG3 = 112,
	BP_SECTIONCAP_BRAIN = 113,
	SBP_130_HEAD = 130,
	SBP_131_HAIR = 131,
	SBP_141_LONGHAIR = 141,
	SBP_142_CIRCLET = 142,
	SBP_143_EARS = 143,
	SBP_150_DECAPITATEDHEAD = 150,
	BP_TORSOCAP_HEAD = 201,
	BP_TORSOCAP_HEAD2 = 202,
	BP_TORSOCAP_LEFTARM = 203,
	BP_TORSOCAP_LEFTARM2 = 204,
	BP_TORSOCAP_RIGHTARM = 205,
	BP_TORSOCAP_RIGHTARM2 = 206,
	BP_TORSOCAP_LEFTLEG = 207,
	BP_TORSOCAP_LEFTLEG2 = 208,
	BP_TORSOCAP_LEFTLEG3 = 209,
	BP_TORSOCAP_RIGHTLEG = 210,
	BP_TORSOCAP_RIGHTLEG2 = 211,
	BP_TORSOCAP_RIGHTLEG3 = 212,
	BP_TORSOCAP_BRAIN = 213,
	SBP_230_HEAD = 230,
	BP_TORSOSECTION_HEAD = 1000,
	BP_TORSOSECTION_HEAD2 = 2000,
	BP_TORSOSECTION_LEFTARM = 3000,
	BP_TORSOSECTION_LEFTARM2 = 4000,
	BP_TORSOSECTION_RIGHTARM = 5000,
	BP_TORSOSECTION_RIGHTARM2 = 6000,
	BP_TORSOSECTION_LEFTLEG = 7000,
	BP_TORSOSECTION_LEFTLEG2 = 8000,
	BP_TORSOSECTION_LEFTLEG3 = 9000,
	BP_TORSOSECTION_RIGHTLEG = 10000,
	BP_TORSOSECTION_RIGHTLEG2 = 11000,
	BP_TORSOSECTION_RIGHTLEG3 = 12000,
	BP_TORSOSECTION_BRAIN = 13000
};
enum hkConstraintType : uint32_t {
	BALLANDSOCKET = 0,
	HINGE = 1,
	LIMITED_HINGE = 2,
	PRISMATIC = 6,
	RAGDOLL = 7,
	STIFFSPRING = 8,
	MALLEABLE = 13
};
enum FogFunction : uint16_t {
	FOG_Z_LINEAR = 0,
	FOG_RANGE_SQ = 1,
	FOG_VERTEX_ALPHA = 2
};
enum AnimType : uint16_t {
	APP_TIME = 0,
	APP_INIT = 1
};
enum DitherFlags : uint16_t {
	DITHER_DISABLED = 0,
	DITHER_ENABLED = 1
};
enum ShadeFlags : uint16_t {
	SHADING_HARD = 0,
	SHADING_SMOOTH = 1
};
enum SpecularFlags : uint16_t {
	SPECULAR_DISABLED = 0,
	SPECULAR_ENABLED = 1
};
enum WireframeFlags : uint16_t {
	WIREFRAME_DISABLED = 0,
	WIREFRAME_ENABLED = 1
};
enum GeomMorpherFlags : uint16_t {
	UPDATE_NORMALS_DISABLED = 0,
	UPDATE_NORMALS_ENABLED = 1
};
enum AGDConsistencyType : uint8_t {
	AGD_MUTABLE = 0,
	AGD_STATIC = 1,
	AGD_VOLATILE = 2
};
enum NiNBTMethod : uint16_t {
	NBT_METHOD_NONE = 0,
	NBT_METHOD_NDL = 1,
	NBT_METHOD_MAX = 2,
	NBT_METHOD_ATI = 3
};
enum TransformMethod : uint32_t {
	TM_MAYA_DEPRECATED = 0,
	TM_MAX = 1,
	TM_MAYA = 2
};
enum AnimationType : uint16_t {
	SIT = 1,
	SLEEP = 2,
	LEAN = 4
};
enum ConstraintPriority : uint32_t {
	PRIORITY_INVALID = 0,
	PRIORITY_PSI = 1,
	PRIORITY_TOI = 3
};
enum hkMotorType : uint8_t {
	MOTOR_NONE = 0,
	MOTOR_POSITION = 1,
	MOTOR_VELOCITY = 2,
	MOTOR_SPRING = 3
};
enum ImageType : uint32_t {
	RGB = 1,
	RGBA = 2
};
enum BroadPhaseType : uint8_t {
	BROAD_PHASE_INVALID = 0,
	BROAD_PHASE_ENTITY = 1,
	BROAD_PHASE_PHANTOM = 2,
	BROAD_PHASE_BORDER = 3
};
enum InterpBlendFlags : uint8_t {
	MANAGER_CONTROLLED = 1
};
enum NiPSysModifierOrder : uint32_t {
	ORDER_KILLOLDPARTICLES = 0,
	ORDER_BSLOD = 1,
	ORDER_EMITTER = 1000,
	ORDER_SPAWN = 2000,
	ORDER_FO3_BSSTRIPUPDATE = 2500,
	ORDER_GENERAL = 3000,
	ORDER_FORCE = 4000,
	ORDER_COLLIDER = 5000,
	ORDER_POS_UPDATE = 6000,
	ORDER_POSTPOS_UPDATE = 6500,
	ORDER_WORLDSHIFT_PARTSPAWN = 6600,
	ORDER_BOUND_UPDATE = 7000,
	ORDER_SK_BSSTRIPUPDATE = 8000
};
enum NiSceneDescNxBroadPhaseType : uint32_t {
	NX_BROADPHASE_QUADRATIC = 0,
	NX_BROADPHASE_FULL = 1,
	NX_BROADPHASE_COHERENT = 2
};
enum NiSceneDescNxHwPipelineSpec : uint32_t {
	NX_HW_RB_PIPELINE_HLP_ONLY = 0,
	NX_HW_PIPELINE_FULL = 1,
	NX_HW_PIPELINE_DEBUG = 2
};
enum NiSceneDescNxHwSceneType : uint32_t {
	NX_HW_SCENE_TYPE_RB = 0,
	NX_HW_SCENE_TYPE_FLUID = 1,
	NX_HW_SCENE_TYPE_FLUID_SOFTWARE = 2,
	NX_HW_SCENE_TYPE_CLOTH = 3
};
enum NxTimeStepMethod : uint32_t {
	NX_TIMESTEP_FIXED = 0,
	NX_TIMESTEP_VARIABLE = 1,
	NX_TIMESTEP_INHERIT = 2
};
enum NxSimulationType : uint32_t {
	NX_SIMULATION_SW = 0,
	NX_SIMULATION_HW = 1
};
enum NxBroadPhaseType : uint32_t {
	NX_BP_TYPE_SAP_SINGLE = 0,
	NX_BP_TYPE_SAP_MULTI = 1
};
enum NxFilterOp : uint32_t {
	NX_FILTEROP_AND = 0,
	NX_FILTEROP_OR = 1,
	NX_FILTEROP_XOR = 2,
	NX_FILTEROP_NAND = 3,
	NX_FILTEROP_NOR = 4,
	NX_FILTEROP_NXOR = 5,
	NX_FILTEROP_SWAP_AND = 6
};
enum NxThreadPriority : uint32_t {
	NX_TP_HIGH = 0,
	NX_TP_ABOVE_NORMAL = 1,
	NX_TP_NORMAL = 2,
	NX_TP_BELOW_NORMAL = 3,
	NX_TP_LOW = 4
};
enum NxPruningStructure : uint32_t {
	NX_PRUNING_NONE = 0,
	NX_PRUNING_OCTREE = 1,
	NX_PRUNING_QUADTREE = 2,
	NX_PRUNING_DYNAMIC_AABB_TREE = 3,
	NX_PRUNING_STATIC_AABB_TREE = 4
};
enum NxCompartmentType : uint32_t {
	NX_SCT_RIGIDBODY = 0,
	NX_SCT_FLUID = 1,
	NX_SCT_CLOTH = 2
};
enum NxDeviceCode : uint32_t {
	NX_DC_PPU_0 = 0,
	NX_DC_PPU_1 = 1,
	NX_DC_PPU_2 = 2,
	NX_DC_PPU_3 = 3,
	NX_DC_PPU_4 = 4,
	NX_DC_PPU_5 = 5,
	NX_DC_PPU_6 = 6,
	NX_DC_PPU_7 = 7,
	NX_DC_PPU_8 = 8,
	NX_DC_CPU = 4294901760,
	NX_DC_PPU_AUTO_ASSIGN = 4294901761
};
enum NxJointType : uint32_t {
	NX_JOINT_PRISMATIC = 0,
	NX_JOINT_REVOLUTE = 1,
	NX_JOINT_CYLINDRICAL = 2,
	NX_JOINT_SPHERICAL = 3,
	NX_JOINT_POINT_ON_LINE = 4,
	NX_JOINT_POINT_IN_PLANE = 5,
	NX_JOINT_DISTANCE = 6,
	NX_JOINT_PULLEY = 7,
	NX_JOINT_FIXED = 8,
	NX_JOINT_D6 = 9
};
enum NxD6JointMotion : uint32_t {
	NX_D6JOINT_MOTION_LOCKED = 0,
	NX_D6JOINT_MOTION_LIMITED = 1,
	NX_D6JOINT_MOTION_FREE = 2
};
enum NxD6JointDriveType : uint32_t {
	NX_D6JOINT_DRIVE_POSITION = 1,
	NX_D6JOINT_DRIVE_VELOCITY = 2
};
enum NxJointProjectionMode : uint32_t {
	NX_JPM_NONE = 0,
	NX_JPM_POINT_MINDIST = 1,
	NX_JPM_LINEAR_MINDIST = 2
};
enum NxShapeType : uint32_t {
	NX_SHAPE_PLANE = 0,
	NX_SHAPE_SPHERE = 1,
	NX_SHAPE_BOX = 2,
	NX_SHAPE_CAPSULE = 3,
	NX_SHAPE_WHEEL = 4,
	NX_SHAPE_CONVEX = 5,
	NX_SHAPE_MESH = 6,
	NX_SHAPE_HEIGHTFIELD = 7,
	NX_SHAPE_RAW_MESH = 8,
	NX_SHAPE_COMPOUND = 9
};
enum NxCombineMode : uint32_t {
	NX_CM_AVERAGE = 0,
	NX_CM_MIN = 1,
	NX_CM_MULTIPLY = 2,
	NX_CM_MAX = 3
};
enum BSShaderType : uint32_t {
	SHADER_TALL_GRASS = 0,
	SHADER_DEFAULT = 1,
	SHADER_SKY = 10,
	SHADER_SKIN = 14,
	SHADER_WATER = 17,
	SHADER_LIGHTING30 = 29,
	SHADER_TILE = 32,
	SHADER_NOLIGHTING = 33
};
enum SkyObjectType : uint32_t {
	BSSM_SKY_TEXTURE = 0,
	BSSM_SKY_SUNGLARE = 1,
	BSSM_SKY = 2,
	BSSM_SKY_CLOUDS = 3,
	BSSM_SKY_STARS = 5,
	BSSM_SKY_MOON_STARS_MASK = 7
};
enum AnimNoteType : uint32_t {
	ANT_INVALID = 0,
	ANT_GRABIK = 1,
	ANT_LOOKIK = 2
};
enum BSCPCullingType : uint32_t {
	BSCP_CULL_NORMAL = 0,
	BSCP_CULL_ALLPASS = 1,
	BSCP_CULL_ALLFAIL = 2,
	BSCP_CULL_IGNOREMULTIBOUNDS = 3,
	BSCP_CULL_FORCEMULTIBOUNDSNOUPDATE = 4
};
enum CloningBehavior : uint32_t {
	CLONING_SHARE = 0,
	CLONING_COPY = 1,
	CLONING_BLANK_COPY = 2
};
enum ComponentFormat : uint32_t {
	F_UNKNOWN = 0x00000000,
	F_INT8_1 = 0x00010101,
	F_INT8_2 = 0x00020102,
	F_INT8_3 = 0x00030103,
	F_INT8_4 = 0x00040104,
	F_UINT8_1 = 0x00010105,
	F_UINT8_2 = 0x00020106,
	F_UINT8_3 = 0x00030107,
	F_UINT8_4 = 0x00040108,
	F_NORMINT8_1 = 0x00010109,
	F_NORMINT8_2 = 0x0002010A,
	F_NORMINT8_3 = 0x0003010B,
	F_NORMINT8_4 = 0x0004010C,
	F_NORMUINT8_1 = 0x0001010D,
	F_NORMUINT8_2 = 0x0002010E,
	F_NORMUINT8_3 = 0x0003010F,
	F_NORMUINT8_4 = 0x00040110,
	F_INT16_1 = 0x00010211,
	F_INT16_2 = 0x00020212,
	F_INT16_3 = 0x00030213,
	F_INT16_4 = 0x00040214,
	F_UINT16_1 = 0x00010215,
	F_UINT16_2 = 0x00020216,
	F_UINT16_3 = 0x00030217,
	F_UINT16_4 = 0x00040218,
	F_NORMINT16_1 = 0x00010219,
	F_NORMINT16_2 = 0x0002021A,
	F_NORMINT16_3 = 0x0003021B,
	F_NORMINT16_4 = 0x0004021C,
	F_NORMUINT16_1 = 0x0001021D,
	F_NORMUINT16_2 = 0x0002021E,
	F_NORMUINT16_3 = 0x0003021F,
	F_NORMUINT16_4 = 0x00040220,
	F_INT32_1 = 0x00010421,
	F_INT32_2 = 0x00020422,
	F_INT32_3 = 0x00030423,
	F_INT32_4 = 0x00040424,
	F_UINT32_1 = 0x00010425,
	F_UINT32_2 = 0x00020426,
	F_UINT32_3 = 0x00030427,
	F_UINT32_4 = 0x00040428,
	F_NORMINT32_1 = 0x00010429,
	F_NORMINT32_2 = 0x0002042A,
	F_NORMINT32_3 = 0x0003042B,
	F_NORMINT32_4 = 0x0004042C,
	F_NORMUINT32_1 = 0x0001042D,
	F_NORMUINT32_2 = 0x0002042E,
	F_NORMUINT32_3 = 0x0003042F,
	F_NORMUINT32_4 = 0x00040430,
	F_FLOAT16_1 = 0x00010231,
	F_FLOAT16_2 = 0x00020232,
	F_FLOAT16_3 = 0x00030233,
	F_FLOAT16_4 = 0x00040234,
	F_FLOAT32_1 = 0x00010435,
	F_FLOAT32_2 = 0x00020436,
	F_FLOAT32_3 = 0x00030437,
	F_FLOAT32_4 = 0x00040438,
	F_UINT_10_10_10_L1 = 0x00010439,
	F_NORMINT_10_10_10_L1 = 0x0001043A,
	F_NORMINT_11_11_10 = 0x0001043B,
	F_NORMUINT8_4_BGRA = 0x0004013C,
	F_NORMINT_10_10_10_2 = 0x0001043D,
	F_UINT_10_10_10_2 = 0x0001043E
};
enum DataStreamUsage : uint32_t {
	USAGE_VERTEX_INDEX = 0,
	USAGE_VERTEX = 1,
	USAGE_SHADER_CONSTANT = 2,
	USAGE_USER = 3
};
enum MeshPrimitiveType : uint32_t {
	MESH_PRIMITIVE_TRIANGLES = 0,
	MESH_PRIMITIVE_TRISTRIPS = 1,
	MESH_PRIMITIVE_LINES = 2,
	MESH_PRIMITIVE_LINESTRIPS = 3,
	MESH_PRIMITIVE_QUADS = 4,
	MESH_PRIMITIVE_POINTS = 5
};
enum SyncPoint : uint16_t {
	SYNC_ANY = 0x8000,
	SYNC_UPDATE = 0x8010,
	SYNC_POST_UPDATE = 0x8020,
	SYNC_VISIBLE = 0x8030,
	SYNC_RENDER = 0x8040,
	SYNC_PHYSICS_SIMULATE = 0x8050,
	SYNC_PHYSICS_COMPLETED = 0x8060,
	SYNC_REFLECTIONS = 0x8070
};
enum AlignMethod : uint32_t {
	ALIGN_INVALID = 0,
	ALIGN_PER_PARTICLE = 1,
	ALIGN_LOCAL_FIXED = 2,
	ALIGN_LOCAL_POSITION = 5,
	ALIGN_LOCAL_VELOCITY = 9,
	ALIGN_CAMERA = 16
};
enum PSLoopBehavior : uint32_t {
	PS_LOOP_CLAMP_BIRTH = 0,
	PS_LOOP_CLAMP_DEATH = 1,
	PS_LOOP_AGESCALE = 2,
	PS_LOOP_LOOP = 3,
	PS_LOOP_REFLECT = 4
};
enum PSForceType : uint32_t {
	FORCE_BOMB = 0,
	FORCE_DRAG = 1,
	FORCE_AIR_FIELD = 2,
	FORCE_DRAG_FIELD = 3,
	FORCE_GRAVITY_FIELD = 4,
	FORCE_RADIAL_FIELD = 5,
	FORCE_TURBULENCE_FIELD = 6,
	FORCE_VORTEX_FIELD = 7,
	FORCE_GRAVITY = 8
};
enum ColliderType : uint32_t {
	COLLIDER_PLANAR = 0,
	COLLIDER_SPHERICAL = 1
};
enum hkWeldingType : uint8_t {
	WT_ANTICLOCKWISE = 0
};
enum bhkCMSMatType : uint8_t {
	CMS_SINGLE_VALUE_PER_CHUNK = 1
};
enum AccumFlags : uint32_t {
	ACCUM_X_TRANS = 0x00000001,
	ACCUM_Y_TRANS = 0x00000002,
	ACCUM_Z_TRANS = 0x00000004,
	ACCUM_X_ROT = 0x00000008,
	ACCUM_Y_ROT = 0x00000010,
	ACCUM_Z_ROT = 0x00000020,
	ACCUM_X_FRONT = 0x00000040,
	ACCUM_Y_FRONT = 0x00000080,
	ACCUM_Z_FRONT = 0x00000100,
	ACCUM_NEG_FRONT = 0x00000200
};
enum FurnitureEntryPoints : uint16_t {
	FRONT = 0x00000001,
	BEHIND = 0x00000002,
	RIGHT = 0x00000004,
	LEFT = 0x00000008,
	UP = 0x00000010
};
enum BSPartFlag : uint16_t {
	PF_EDITOR_VISIBLE = 0x00000001,
	PF_START_NET_BONESET = 0x00000100
};
enum PathFlags : uint16_t {
	NIPI_CVDATANEEDSUPDATE = 0x00000001,
	NIPI_CURVETYPEOPEN = 0x00000002,
	NIPI_ALLOWFLIP = 0x00000004,
	NIPI_BANK = 0x00000008,
	NIPI_CONSTANTVELOCITY = 0x00000010,
	NIPI_FOLLOW = 0x00000020,
	NIPI_FLIP = 0x00000040
};
enum bhkCOFlags : uint16_t {
	BHKCO_ACTIVE = 0x00000001,
	BHKCO_RESET_TRANS = 0x00000002,
	BHKCO_NOTIFY = 0x00000004,
	BHKCO_SET_LOCAL = 0x00000008,
	BHKCO_DBG_DISPLAY = 0x00000010,
	BHKCO_USE_VEL = 0x00000020,
	BHKCO_RESET = 0x00000040,
	BHKCO_SYNC_ON_UPDATE = 0x00000080,
	BHKCO_BLEND_POS = 0x00000100,
	BHKCO_ALWAYS_BLEND = 0x00000200,
	BHKCO_ANIM_TARGETED = 0x00000400,
	BHKCO_DISMEMBERED_LIMB = 0x00000800
};
enum AspectFlags : uint16_t {
	VELOCITY_ORIENTATION = 0x00000001,
	INITIAL_ROTATION_FROM_VELOCITY = 0x00000002,
	SPEED_TO_ASPECT_ENABLED = 0x00000100
};
enum LookAtFlags : uint16_t {
	LOOK_FLIP = 0x00000001,
	LOOK_Y_AXIS = 0x00000002,
	LOOK_Z_AXIS = 0x00000004
};
enum NiSwitchFlags : uint16_t {
	UPDATEONLYACTIVECHILD = 0x00000001,
	UPDATECONTROLLERS = 0x00000002
};
enum NxBodyFlag : uint32_t {
	NX_BF_DISABLE_GRAVITY = 0x00000001,
	NX_BF_FROZEN_POS_X = 0x00000002,
	NX_BF_FROZEN_POS_Y = 0x00000004,
	NX_BF_FROZEN_POS_Z = 0x00000008,
	NX_BF_FROZEN_ROT_X = 0x00000010,
	NX_BF_FROZEN_ROT_Y = 0x00000020,
	NX_BF_FROZEN_ROT_Z = 0x00000040,
	NX_BF_KINEMATIC = 0x00000080,
	NX_BF_VISUALI_ZATION = 0x00000100,
	NX_BF_POSE_SLEEP_TEST = 0x00000200,
	NX_BF_FILTER_SLEEP_VEL = 0x00000400,
	NX_BF_ENERGY_SLEEP_TEST = 0x00000800
};
enum NxShapeFlag : uint32_t {
	NX_SF_TRIGGER_ON_ENTER = 0x00000001,
	NX_SF_TRIGGER_ON_LEAVE = 0x00000002,
	NX_SF_TRIGGER_ON_STAY = 0x00000004,
	NX_SF_VISUALI_ZATION = 0x00000008,
	NX_SF_DISABLE_COLLISION = 0x00000010,
	NX_SF_FEATURE_INDICES = 0x00000020,
	NX_SF_DISABLE_RAYCASTING = 0x00000040,
	NX_SF_POINT_CONTACT_FORCE = 0x00000080,
	NX_SF_FLUID_DRAIN = 0x00000100,
	NX_SF_FLUID_DISABLE_COLLISION = 0x00000400,
	NX_SF_FLUID_TWOWAY = 0x00000800,
	NX_SF_DISABLE_RESPONSE = 0x00001000,
	NX_SF_DYNAMIC_DYNAMIC_CCD = 0x00002000,
	NX_SF_DISABLE_SCENE_QUERIES = 0x00004000,
	NX_SF_CLOTH_DRAIN = 0x00008000,
	NX_SF_CLOTH_DISABLE_COLLISION = 0x00010000,
	NX_SF_CLOTH_TWOWAY = 0x00020000,
	NX_SF_SOFTBODY_DRAIN = 0x00040000,
	NX_SF_SOFTBODY_DISABLE_COLLISION = 0x00080000,
	NX_SF_SOFTBODY_TWOWAY = 0x00100000
};
enum NxMaterialFlag : uint32_t {
	NX_MF_ANISOTROPIC = 0x00000001,
	NX_MF_DISABLE_FRICTION = 0x00000010,
	NX_MF_DISABLE_STRONG_FRICTION = 0x00000020
};
enum NxClothFlag : uint32_t {
	NX_CLF_PRESSURE = 0x00000001,
	NX_CLF_STATIC = 0x00000002,
	NX_CLF_DISABLE_COLLISION = 0x00000004,
	NX_CLF_SELFCOLLISION = 0x00000008,
	NX_CLF_VISUALI_ZATION = 0x00000010,
	NX_CLF_GRAVITY = 0x00000020,
	NX_CLF_BENDING = 0x00000040,
	NX_CLF_BENDING_ORTHO = 0x00000080,
	NX_CLF_DAMPING = 0x00000100,
	NX_CLF_COLLISION_TWOWAY = 0x00000200,
	NX_CLF_TRIANGLE_COLLISION = 0x00000800,
	NX_CLF_TEARABLE = 0x00001000,
	NX_CLF_HARDWARE = 0x00002000,
	NX_CLF_COMDAMPING = 0x00004000,
	NX_CLF_VALIDBOUNDS = 0x00008000,
	NX_CLF_FLUID_COLLISION = 0x00010000,
	NX_CLF_DISABLE_DYNAMIC_CCD = 0x00020000,
	NX_CLF_ADHERE = 0x00040000
};
enum BSShaderFlags : uint32_t {
	F3SF1_SPECULAR = 0x00000001,
	F3SF1_SKINNED = 0x00000002,
	F3SF1_LOWDETAIL = 0x00000004,
	F3SF1_VERTEX_ALPHA = 0x00000008,
	F3SF1_UNKNOWN_1 = 0x00000010,
	F3SF1_SINGLE_PASS = 0x00000020,
	F3SF1_EMPTY = 0x00000040,
	F3SF1_ENVIRONMENT_MAPPING = 0x00000080,
	F3SF1_ALPHA_TEXTURE = 0x00000100,
	F3SF1_UNKNOWN_2 = 0x00000200,
	F3SF1_FACEGEN = 0x00000400,
	F3SF1_PARALLAX_SHADER_INDEX_15 = 0x00000800,
	F3SF1_UNKNOWN_3 = 0x00001000,
	F3SF1_NON_PROJECTIVE_SHADOWS = 0x00002000,
	F3SF1_UNKNOWN_4 = 0x00004000,
	F3SF1_REFRACTION = 0x00008000,
	F3SF1_FIRE_REFRACTION = 0x00010000,
	F3SF1_EYE_ENVIRONMENT_MAPPING = 0x00020000,
	F3SF1_HAIR = 0x00040000,
	F3SF1_DYNAMIC_ALPHA = 0x00080000,
	F3SF1_LOCALMAP_HIDE_SECRET = 0x00100000,
	F3SF1_WINDOW_ENVIRONMENT_MAPPING = 0x00200000,
	F3SF1_TREE_BILLBOARD = 0x00400000,
	F3SF1_SHADOW_FRUSTUM = 0x00800000,
	F3SF1_MULTIPLE_TEXTURES = 0x01000000,
	F3SF1_REMAPPABLE_TEXTURES = 0x02000000,
	F3SF1_DECAL_SINGLE_PASS = 0x04000000,
	F3SF1_DYNAMIC_DECAL_SINGLE_PASS = 0x08000000,
	F3SF1_PARALLAX_OCCULSION = 0x10000000,
	F3SF1_EXTERNAL_EMITTANCE = 0x20000000,
	F3SF1_SHADOW_MAP = 0x40000000,
	F3SF1_ZBUFFER_TEST = 0x80000000
};
enum BSShaderFlags2 : uint32_t {
	F3SF2_ZBUFFER_WRITE = 0x00000001,
	F3SF2_LOD_LANDSCAPE = 0x00000002,
	F3SF2_LOD_BUILDING = 0x00000004,
	F3SF2_NO_FADE = 0x00000008,
	F3SF2_REFRACTION_TINT = 0x00000010,
	F3SF2_VERTEX_COLORS = 0x00000020,
	F3SF2_UNKNOWN1 = 0x00000040,
	F3SF2_FIRST_LIGHT_IS_POINT_LIGHT = 0x00000080,
	F3SF2_SECOND_LIGHT = 0x00000100,
	F3SF2_THIRD_LIGHT = 0x00000200,
	F3SF2_VERTEX_LIGHTING = 0x00000400,
	F3SF2_UNIFORM_SCALE = 0x00000800,
	F3SF2_FIT_SLOPE = 0x00001000,
	F3SF2_BILLBOARD_AND_ENVMAP_LIGHT_FADE = 0x00002000,
	F3SF2_NO_LOD_LAND_BLEND = 0x00004000,
	F3SF2_ENVMAP_LIGHT_FADE = 0x00008000,
	F3SF2_WIREFRAME = 0x00010000,
	F3SF2_VATS_SELECTION = 0x00020000,
	F3SF2_SHOW_IN_LOCAL_MAP = 0x00040000,
	F3SF2_PREMULT_ALPHA = 0x00080000,
	F3SF2_SKIP_NORMAL_MAPS = 0x00100000,
	F3SF2_ALPHA_DECAL = 0x00200000,
	F3SF2_NO_TRANSPARECNY_MULTISAMPLING = 0x00400000,
	F3SF2_UNKNOWN2 = 0x00800000,
	F3SF2_UNKNOWN3 = 0x01000000,
	F3SF2_UNKNOWN4 = 0x02000000,
	F3SF2_UNKNOWN5 = 0x04000000,
	F3SF2_UNKNOWN6 = 0x08000000,
	F3SF2_UNKNOWN7 = 0x10000000,
	F3SF2_UNKNOWN8 = 0x20000000,
	F3SF2_UNKNOWN9 = 0x40000000,
	F3SF2_UNKNOWN10 = 0x80000000
};
enum BSValueNodeFlags : uint8_t {
	BILLBOARDWORLD_Z = 0x00000001,
	USEPLAYERADJUST = 0x00000002
};
enum DataStreamAccess : uint32_t {
	CPU_READ = 0x00000001,
	CPU_WRITE_STATIC = 0x00000002,
	CPU_WRITE_MUTABLE = 0x00000004,
	CPU_WRITE_VOLATILE = 0x00000008,
	GPU_READ = 0x00000010,
	GPU_WRITE = 0x00000020,
	CPU_WRITE_STATIC_INITITIALIZED = 0x00000040
};
enum NiShadowGeneratorFlags : uint16_t {
	DIRTY_SHADOWMAP = 0x00000001,
	DIRTY_RENDERVIEWS = 0x00000002,
	GEN_STATIC = 0x00000004,
	GEN_ACTIVE = 0x00000008,
	RENDER_BACKFACES = 0x00000010,
	STRICTLY_OBSERVE_SIZE_HINT = 0x00000020,
	AUTO_NEAR_DIST = 0x00000040,
	AUTO_FAR_DIST = 0x00000080,
	AUTO_DIR_LIGHT_FRUSTUM_WIDTH = 0x00000100,
	AUTO_DIR_LIGHT_FRUSTUM_POSITION = 0x00000200
};
}; // namespace
